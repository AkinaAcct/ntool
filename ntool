#!/data/data/com.termux/files/usr/bin/env bash
####################
#                  #
#  屎  山  代  码  #
#                  #
####################
#也许你不知道，但这是一个高中生在课余时间写的一个垃圾屎山脚本
#代码虽然是自己敲的
#但是真的好jb的乱
#也许这以后会成为一个烂尾工程吧(一定)

arch="`uname -m`"

#以下是标准屎山之我自己都不认识的function
cho(){
	clear 		#这里是选择容器版本的页面function
	echo "this is a bad page that i even want to delete it"
        echo "all of the choices will be never updated(maybe?) and DO NOT REPORT ISSUSES ANOUT THIS SCIRPT ABOUT PROOT!"
        echo "该页面不在更新，**不要**提关于容器功能的issue，因为我也不会去修"
        echo "只有Ubuntu的原因是我写脚本时只需要一个差不多的proot容器:D"
        echo "0. 返回上一个页面"
        echo "1. Ubuntu"
        echo "2. debian(已烂尾)"
        read -p "输入你的选择:" cos
        case $cos in
                0)
                        ntool
                        break
                        ;;
                1)
                        cd ~/.ntool
                        if [ -a "ub-i.sh" ];	#检测有无两个安装脚本
                        then
                                chmod +x ub-i.sh
                                ./ub-i.sh
                        else
                                wget https://raw.githubusercontent.com/nnyyaa/ntool/main/sc/ub-i.sh
                                chmod +x ub-i.sh
                                ./ub-i.sh
                        fi
                        break
                        ;;
                2)
                        cd ~/.ntool
                        if [ -a "de-i.sh"];
                        then
                                chmod +x de-i.sh
                                ./de-i.sh
                        else
                                wget https://raw.githubusercontent.com/nnyyaa/ntool/main/sc/de-i.sh
                                chmod +x de-i.sh
                                ./de-i.sh
                        fi
			;;
                *)
                        echo "未知选项"
			sleep 2
			cho
                        ;;
        esac
}
ofp(){			#这里是其他功能页的function
	clear
	echo "此页面进行分类"
	echo "0. 返回脚本首页"
        echo "1. 网络类"
	echo "2. 工具类"
        read -p "输入你的选择" ofc    #of是other function的缩写
        case $ofc in
                0)
			ntool
                        ;;
                1)
                        webp
                        ;;
		2)
			toolp
			;;
                *)
                        echo "未知选择"
			sleep 2
			ofp
                        ;;
        esac
}
toolp(){			#这里是其它工具-工具类页面的function
	clear
	echo "0. 返回上一页"
	echo "1. ping"
	echo "2. ping6(即ipv6 ping)"
	echo "3. 寻找文件(find)"
	echo "4. 在termux原系统里安装jdk"
	echo "5. 备份termux(实验性功能)"
	read -p "输入你的选择:" answer
	case $answer in
		0)
			ofp
			;;
		1)
			if command -v ping >> /dev/null;then
				read -p "输入要进行ping的IP/域名:" ip
				read -p "输入要ping的次数:" times
				read -p "输入ping的速度（以秒为单位，省略符号，无root最快0.2）:" speed
				echo "start ping..."
				ping -i ${speed} -c${times} ${ip}
				echo "stop ping."
			else
				echo "未安装ping，正在安装..."
				pkg i termux-tools -y
				toolp
			fi
			;;
		2)
			if command -v ping6 >> /dev/null;then
                                read -p "输入要进行ping6的IP/域名:" ip
                                read -p "输入要ping6的次数:" times
                                read -p "输入ping6的速度（以秒为单位，省略符号，无root最快0.2）:" speed
                                echo "start ping..."
                                ping6 -i ${speed} -c${times} ${ip}
                                echo "stop ping."
			else
				echo "ping6未安装,正在安装..."
				pkg i termux-tools -y
				toolp
			fi
			;;
		3)
			read -p "输入你要搜索的文件:" filename
			read -p "输入你要搜索的目录:" filepath
			echo "searching..."
			find -name ${filename} ${filepath}
			;;
		4)
			echo "只支持openjdk17"
			read -p "按回车以继续"
			pkg i openjdk-17 -y
			echo "安装完成"
			;;
		5)
			echo "你在使用一个**实验性**功能"
			echo "备份文件将保存在/sdcard/Download/backup"
			read -p "按回车以继续"
			cd ~
			if [ -d storage ];then
				tar -zcvf /data/data/com.termux/files ~/storage/downloads/backup 
				echo "done"
			else
				echo "termux-setup-storage未执行"
				echo "执行中..."
				sleep 2
				termux-setup-storage
				echo "done"
				sleep 1
				ofp
			fi
			;;
		*)
			echo "未知选择"
			sleep 2
			toolp
			;;
	esac
}
update(){			#这里是升级的function
	cd ~
	rm ~/install.sh
	wget https://raw.githubusercontent.com/nnyyaa/ntool/main/install.sh
	chmod +x ~/install.sh
	~/install.sh
	rm ~/install.sh
}

webp(){				#这里是其他功能-网络类页面function
	clear
	echo "0. 返回上个页面"
	echo "1. 安装Nginx"
	echo "2. 安装Apache2"
	read -p "输入你的选择:" webc
	case $webc in
		0)
			ofp
			;;
		1)
			pkg i nginx -y
			;;
		2)
			pkg i apache2 -y
			;;
		*)
			echo "未知选择"
			sleep 2
			webp
			;;
	esac
}


clear
neofetch
cd ~
echo "当前版本:v0.1.0"
echo "你的架构为:${arch}"
echo "0. 退出"
echo "00. 更新"
echo "1. 安装一个proot容器"
echo "2. 其他功能"
read -p "输入你的选择:" choice
case $choice in
	00)
		update
		;;
	0)
		echo "bye"
		;;
	1)
		cho
		;;
	2)
		ofp
		;;

	*)
		echo "输入一个没有的选项是在为难我嘛！"
		sleep 2
		ntool
		;;

esac
exit 0
